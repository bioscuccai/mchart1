declare var d3: any;
declare var _: any;
declare var moment: any;
declare var $: any;
declare var pulseFlat: any;
declare var sysFlat: any;
declare var diasFlat: any;
declare var timestampFlat: any;
interface MarginSize {
    top: number;
    bottom: number;
    left: number;
    right: number;
}
interface Opts {
    margin?: MarginSize;
    height?: number;
    width?: number;
    sysLimit?: number;
    diasLimit?: number;
    tickStart?: number;
    tickEnd?: number;
    tickInterval?: number;
    barSize?: number;
    circleSize?: number;
    limit?: number;
    range?: number;
}
interface Data {
    pulse: number;
    sys: number;
    dias: number;
    timestamp: Date;
    special?: boolean;
}
declare class MedChart {
    data: [Data];
    selector: string;
    brushSelector: string;
    opts: Opts;
    defaults: Opts;
    svg: any;
    selectorClean: any;
    brushSelectorClean: any;
    constructor(data: [Data], selector: string, brushSelector: string, opts?: Opts);
    update(data: any): void;
    private parseData(data);
    private setup();
    xScale: any;
    yScale: any;
    xAxis: any;
    yAxis: any;
    xExtent: any;
    xAxisElem: any;
    yAxisElem: any;
    initialExtent: any;
    setupScales(): void;
    private calcInitialExtent();
    tickFormat: any;
    private setupAxes();
    private calcTicks();
    brushG: any;
    private markLimits();
    private updateAxes();
    lineSys: any;
    lineDias: any;
    sysPath: any;
    diasPath: any;
    private setupLines();
    private updateLines();
    bars: any;
    private setupBar();
    private updateBar();
    private currentBarWidth();
    private reapplyBarWidth();
    sysCircle: any;
    diasCircle: any;
    private setupCircles();
    private updateCircles();
    brushScale: any;
    timeBrush: any;
    brushSvg: any;
    brushAxis: any;
    brushElem: any;
    private setupBrush();
    private sameExtent(ex1, ex2);
    private brushed();
    private setupTooltips();
    private removeTooltip(d);
    private displayTooltip(d, chartType, event);
    private setupClips();
    private setupViewboardClip();
    overlayDiasPath: any;
    overlaySysPath: any;
    overlayLineDias: any;
    overlayLineSys: any;
    private setupOverlayLines();
    private updateOverlayLines();
    private setupBrushAxes();
    private setupChart();
}
